import "../common/Node.poosl"
import "BusBasedNetwork.poosl"

cluster class Bus_N_nodes (AccuracyCheckInterval: Real, ArbiterProcessingTime: Real, BusTransferDelay: Real, LinkCapacity: Real, Load: Real, MeanBurstSize: Real, NIBufferCapacity: Integer, NumberOfNodes: Integer)
// cluster class representing an SoC with a bus-based network
// Parameters:
// AccuracyCheckInterval (simulated) time interval to check accuracy of the statistical estimators
// ArbiterProcessingTime time the arbiter takes to resolve an arbitration step
// BusTransferDelay time it takes to transfer a packet across the bus
// LinkCapacity capacity of the link between nodes and network interfaces
// Load average traffic load generated by the nodes in the network
// MeanBurstSize average burst size of the bursty traffic generated by the noses
// NIBufferCapacity capacity of the input buffers of the network interfaces
// NumberOfNodes the number of nodes in the network

ports

instances
	N1: Node(AccuracyCheckInterval := AccuracyCheckInterval, LinkCapacity := LinkCapacity, Load := Load, MeanBurstSize := MeanBurstSize, MyID := 1, NumberOfNodes := NumberOfNodes)
	N2: Node(AccuracyCheckInterval := AccuracyCheckInterval, LinkCapacity := LinkCapacity, Load := Load, MeanBurstSize := MeanBurstSize, MyID := 2, NumberOfNodes := NumberOfNodes)
	N3: Node(AccuracyCheckInterval := AccuracyCheckInterval, LinkCapacity := LinkCapacity, Load := Load, MeanBurstSize := MeanBurstSize, MyID := 3, NumberOfNodes := NumberOfNodes)
Network: BusBasedNetwork2(ArbiterProcessingTime := ArbiterProcessingTime, BusTransferDelay := BusTransferDelay, NIBufferCapacity := NIBufferCapacity, NumberOfNodes := NumberOfNodes)

channels
	{ N1.NI, Network.Node1 } 
	{ N2.NI, Network.Node2 } 
	{ N3.NI, Network.Node3 } 

