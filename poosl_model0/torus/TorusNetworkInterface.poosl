import "TorusFlit.poosl"
import "../common/NetworkInterface.poosl"
import "nodecoordination.poosl"

process class TorusNetworkInterface (NumberOfXNodes: Integer, NumberOfYNodes: Integer)
extends NetworkInterface

ports
	// no new ports compared to NetworkInterface
	
messages
	// no new messages compared to NetworkInterface

variables
	Locator: NodeMap
	rand : RandomGenerator
init
	InitialiseTorus()()

methods

	ForwardToNetwork()() |p: Packet, f: Flit,Xdest,Ydest,Xsource,Ysource:Integer,dest,source: XYCoords|
		
		[InputBuffer isEmpty not] p := InputBuffer inspect;
		dest := Locator getCoordinatesOf(p getDestination);
		source := Locator getCoordinatesOf(MyID);
		Xdest := dest getX() ;
		Xsource := source getX();
		Ydest := dest getY() ;
		Ysource := source getY();
		
		if Xdest<Xsource then
			Xdest:=Xdest+NumberOfXNodes
		fi;
		if Ydest<Ysource then
			Ydest:=Ydest+NumberOfYNodes
		fi;
		dest := new(XYCoords) init(Xdest, Ydest);		
		f := new(TorusFlit) setPacket(p) setDestinationCoordinates(dest);
		Network!Flit(f);
		InputBuffer remove;
		ForwardToNetwork()()
		
	// additional initialisation compared to the super class
	InitialiseTorus()()
		Locator := new(NodeMap) init(NumberOfXNodes, NumberOfYNodes);
		rand := new(RandomGenerator) randomiseSeed;
		Initialise()()
	
		